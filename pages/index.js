import React, {useState} from 'react';
import { makeStyles } from "@material-ui/core/styles";
import Blocks from '../src/components/Blocks';
import Container from '@material-ui/core/Container';
import { useMediaQuery } from "@material-ui/core";
import HeadMeta from '../src/components/Head';
import { getStaticPropsForTina } from "tinacms";


const useStyles = makeStyles(theme => ({
  container: {
    // minHeight: 'calc(100vh - 170px)',
    padding: 0,
    overflow: 'hidden',
    // marginTop: 50,
  }
}));


export default function Home(props) {
  const classes = useStyles();
  const isMobile = useMediaQuery(theme => theme.breakpoints.down("sm"));
  const isLaptop = useMediaQuery(theme => theme.breakpoints.down("md"));

  return (
    <Container maxWidth={isMobile ? 'sm' : isLaptop ? 'md' : 'lg'} className={classes.container}>
      <HeadMeta homepage="true" title="Simflight" description="Generated by create next app" icon="/favicon.ico" />
      <Blocks {...props.data.getPagesDocument.data} />
    </Container>
  )
}

export const getStaticProps = async () => {
  const tinaProps = (await getStaticPropsForTina({
    query: `#graphql
    query ContentQuery($relativePath: String!) {
      getPagesDocument(relativePath: $relativePath) {
        data {
          __typename
          blocks {
            __typename

            ... on PagesBlocksHero {
              tagline
              headline
              text
              actions {
                label
                type
                icon
                link
              }
              color
              image {
                src
                alt
              }
            }

            ... on PagesBlocksFeatures {
              headline
              items {
                title
                text {
                  item1
                  item2
                  item3
                }
                image {
                  src
                  alt
                }
              }
            }

            ... on PagesBlocksVideoGallery {
              videoItems {
                  thumb
                  src
                  alt
              }
            }

          }
        }
      }
    }
  `,
  variables: {relativePath: "home.md"},
  }))

  return {
    props: {
      ...tinaProps,
    },
  };
};
